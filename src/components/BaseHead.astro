---
// @ts-ignore
import type { Dir } from "../env";
import Navbar from "./Navbar.svelte";
import SideBar from "./SideBar.svelte";
import fs from "fs";
// Import the global.css file here so that it is included on
// all pages through the use of the <BaseHead /> component.
import "../styles/global.css";

const mustNotMatch = /\[.*\]/;
const addToPath = (path: string, name: string): Dir => {
	const dirfs: Dir = {
		name,
		path: path.replace("./src/pages/", "/") + name + "/",
		subdirs: [],
		files: [],
	};
	path = path + name;
	fs.readdirSync(path, { withFileTypes: true }).forEach((d) => {
		if (mustNotMatch.test(d.name) || d.name === "gesetze") return;
		if (d.isDirectory()) dirfs.subdirs.push(addToPath(path + "/", d.name));
		else dirfs.files.push(d.name);
	});
	return dirfs;
};
const dir = addToPath("./src/", "pages");

export interface Props {
	title: string;
	description: string;
	image?: string;
}

const { title, description, image = "/placeholder-social.jpg" } = Astro.props;
---

<!-- Global Metadata -->
<meta charset="utf-8" />
<meta
	name="viewport"
	content="width=device-width,height=device-height,initial-scale=1"
/>
<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
<!-- <meta name="generator" content={Astro.generator} /> -->

<!-- Primary Meta Tags -->
<title>{title}</title>
<meta name="title" content={title} />
<meta name="description" content={description} />

<!-- Open Graph / Facebook -->
<!-- <meta property="og:type" content="website" /> -->
<!-- <meta property="og:url" content={Astro.url} /> -->
<!-- <meta property="og:title" content={title} /> -->
<!-- <meta property="og:description" content={description} /> -->
<!-- <meta property="og:image" content={new URL(image, Astro.url)} /> -->

<!-- Twitter -->
<!-- <meta property="twitter:card" content="summary_large_image" /> -->
<!-- <meta property="twitter:url" content={Astro.url} /> -->
<!-- <meta property="twitter:title" content={title} /> -->
<!-- <meta property="twitter:description" content={description} /> -->
<!-- <meta property="twitter:image" content={new URL(image, Astro.url)} /> -->

<script>
	import { state } from "../config";
	const theme = window.localStorage.getItem("theme");
	if (theme) state.setKey("theme", theme);
</script>
<Navbar client:load />
<SideBar {dir} client:load />
